# -*- coding: utf-8 -*-
"""Face_recognition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q5TtBxOIX4py6L21kp-_b9a0SS4uXzNU
"""

!pip3 install face_recognition

import face_recognition
import cv2
import os
import numpy as np
from google.colab.patches import cv2_imshow
unknown_face_dir="/content/unknown_faces"
known_face_dir="/content/known_faces"
tolerance=0.6
frame_thickness=3
font_thickness=2
Model='cnn'

#encoding known faces
# known_faces=np.array([])
# known_names=np.array([])
#np.append(known_faces,2)
known_faces=[]
known_names=[]
for name in os.listdir(known_face_dir):
  for filename in os.listdir(f"{known_face_dir}/{name}"):
    image=face_recognition.load_image_file(f"{known_face_dir}/{name}/{filename}")
    encoding =  face_recognition.face_encodings(image)[0]
    # known_faces=np.append(known_faces,encoding)
    # known_names=np.append(known_names,name)
    known_faces.append(encoding)
    known_names.append(name)
    # print(known_faces)
    # print(known_names)
#processing unknown faces
for filename in os.listdir(unknown_face_dir):
  print(filename)
  image=face_recognition.load_image_file(f"{unknown_face_dir}/{filename}")
  locations=face_recognition.face_locations(image,model=Model)
  encodings=face_recognition.face_encodings(image,locations)
  image=cv2.cvtColor(image,cv2.COLOR_RGB2BGR)
  
  for face_encoding,face_location in zip(encodings,locations):
    result=face_recognition.compare_faces(known_faces,face_encoding,tolerance)
    match=None
    if True in result:
      match=known_names[result.index(True)]
      print(f"Match found:{match}")

      top_left=(face_location[3],face_location[0])
      bottom_right=(face_location[1],face_location[2])

      color=[0,255,0]
      cv2.rectangle(image,top_left,bottom_right,color,frame_thickness)
      ##label box for rectangle
      top_left=(face_location[3],face_location[2])
      bottom_right=(face_location[1],face_location[2]+22)##plus 22 pixels up
      cv2.rectangle(image,top_left,bottom_right,color,cv2.FILLED)
      cv2.putText(image,match,(face_location[3]+10,face_location[2]+15),cv2.FONT_HERSHEY_SCRIPT_COMPLEX,0.5,(00,600,600),font_thickness)

  cv2_imshow(image)

